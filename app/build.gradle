apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

// Manifest version information!
int versionMajor = 1
int versionMinor = 0
int versionPatch = 0
int versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

boolean isTravis = "true".equals(System.getenv("TRAVIS"))
println("isTravis: ${isTravis}")
boolean preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))
println("preDexEnabled: ${preDexEnabled}")
boolean usePreDex = preDexEnabled && !isTravis
println("usePreDex: ${usePreDex}")

android {

    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    dexOptions {
        javaMaxHeapSize "4g"
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = usePreDex
    }

    defaultConfig {
        applicationId "io.kaeawc.soundhub"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            minifyEnabled false
        }
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'asm-license.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'io.kaeawc.testplayground'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Libraries
    compile 'com.android.support:support-annotations:22.1.1'
    compile 'com.android.support:appcompat-v7:22.1.1'

    // Json parsing
    compile 'com.google.code.gson:gson:2.3.1'

    // HTTP Networking
    compile('com.squareup.retrofit:retrofit:1.9.0') {
        exclude group: 'commons-io', module: 'commons-io'
    }

    // WebSockets
    compile 'com.koushikdutta.async:androidasync:2.1.3'

    // EventBus
    compile 'de.greenrobot:eventbus:2.4.0'

    // In-memory cache
    compile('com.github.anupcowkur:reservoir:1.2') {
        exclude group: 'commons-io', module: 'commons-io'
    }

    // Java Utilities
    compile 'org.apache.commons:commons-lang3:3.3.2'

    // Logging
    compile 'com.jakewharton.timber:timber:2.7.1'

    // Database
    compile 'com.michaelpardo:ollie:0.3.1'
    apt 'com.michaelpardo:ollie-compiler:0.3.1'

    // Unit Testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.assertj:assertj-core:1.7.1'

    // Integration Testing
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'org.assertj:assertj-core:1.7.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.1') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.2') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.2') {
        exclude module: 'support-annotations'
    }
}
